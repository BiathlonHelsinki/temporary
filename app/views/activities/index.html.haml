.activities_index
  .row.expanded
    .small-12.columns
      %h1= t :activity
  .row.expanded
    .small-12.columns
      %h6= t :filter_by
  .row.expanded
    / .small-6.medium-4.large-3.columns
    /   %select#activity_description
    /     %option{:value => ""} &nbsp;
    /     - @filters["description"].each do |filter|
    /       %option{:value => filter, :selected => (params[:filter_description] == filter ? :selected : false)}= filter
    .small-6.medium-4.large-3.columns.end
      = form_tag '/activities', :method => :get do
        = text_field_tag 'by_string', params[:by_string],  placeholder: 'Search....'
      
  - if params[:user_id]
    .row.expanded
      .small-8.columns
        %h4= t(:showing_all_activity_for_user, user: @user.display_name)

  .row.expanded
    .small-12.columns
      %table.activities#activities
        %thead
          %tr
            %th= t :the_date
            %th= t :who
            %th= t :activity
            %th= t :subject
            %th
              = raw tsign
              = " / "
              = raw "&#7549;"
              %small= link_to '?', '#', onclick: "javascript:$('.occluded').slideToggle();return false"
              .occluded
                = fa_icon('plus') + ": " + t(:created)
                %br/
                = fa_icon('minus') + ": " + t(:spent)
                %br/
                = fa_icon('smile-o') + "/" + fa_icon('frown-o') + ': ' + t(:pledged_or_withdrawn)
                %br/
                = fa_icon('arrows-h') + ": " + t(:transferred)
            %th Info
        / %tfoot
        /   %tr
        /     %td{:colspan => "4"} Â 
        /     %td
        /       = @activities.where(addition: 1).sum{|x| x.value.to_i} - @activities.where(addition: -1).sum{|x| x.value.to_i}
        /     %td
        %tbody.page
          = render @activities
  .row.expanded
    .small-12.columns= paginate @activities

= content_for :jquery do
  :plain
    $('table.activities').stacktable();
    $("#activities .page").infinitescroll({navSelector: "nav.pagination", nextSelector: "nav.pagination a[rel=next]", itemSelector: "#activities tr.activity",  loading: { msgText: 'Loading the next set of activities....' }});