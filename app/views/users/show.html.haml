.user_profile
  .row.expanded
    .small-12.columns
      .name
        = @user.display_name
        - unless @user.authentications.empty?
          - unless @user.authentications.select{|x| x.provider == 'facebook' }.empty?
            - if @user.show_facebook_link
              = link_to fa_icon('facebook'), "http://facebook.com/#{@user.authentications.select{|x| x.provider == 'facebook'}.first.uid}", target: :_blank
          - unless @user.authentications.select{|x| x.provider == 'twitter' }.empty?
            - if @user.show_twitter_link
              = link_to fa_icon('twitter'), "http://twitter.com/#{@user.authentications.select{|x| x.provider == 'twitter'}.first.username}", target: :_blank

      .since
        = t(:user_since, when: l(@user.created_at.to_date, format: :long))
        = " (#{time_ago_in_words(@user.created_at)})"
  .row.expanded
    .small-10.medium-4.columns
      - if @user.avatar?
        = image_tag @user.avatar.url(:medium)

      -else
        = image_tag 'user_missing_large.png'
    .small-10.medium-8.columns
      - unless @user.website.blank?
        %div
          %strong= t(:website) + ":"
          = link_to @user.website, @user.website, target: :_blank
          %br/
          %br/
      %strong= t(:balance) + ":"
      = raw "#{@user.latest_balance}#{tsign}"
      %br/
      - if user_signed_in?
        - if current_user != @user && current_user.latest_balance > 0
          %br/
          = link_to raw(t(:send_t_to_user, username: @user.username)), send_temps_user_transfers_path(@user), class: [:button]
      - unless @user.instances_users.empty?
        %br
        .ethereum
          %strong= t(:participated_in)
          = @user.instances.size.to_s
          = t(:experiment, count: @user.instances.size)
      - unless @user.accounts.empty?
        %br/
        .ethereum
          %strong= t :ethereum_accounts
          - @user.accounts.each do |account|
            %p= link_to account.address, "https://#{Rails.env.development? ? 'testnet.' : ''}etherscan.io/token/#{Figaro.env.contract_address}?a=#{account.address}", target: :_blank

      .subsection
        %div
          %strong= t(:id_cards)
          .info
            - if @user.nfcs.empty?
              %em= t(:no_id_cards_yet)
            - else
              .row
                .small-12.columns
                  %table
                    %thead
                      %th= t :address
                      %th
                      %th= t :created
                      %th= t :last_used
                    %tbody
                      - @user.nfcs.each do |card|
                        %tr
                          %td= card.tag_address
                          %td
                            - if card.keyholder?
                              = fa_icon 'key'
                          %td= l(card.created_at, format: :long)
                          %td
                            = l(card.last_used, format: :long) unless card.last_used.nil?
                            - if user_signed_in?
                              - if current_user.has_role? :admin
                                = link_to card.keyholder? ? 'remove access' : 'grant access', "/admin/nfcs/#{card.id.to_s}/toggle", class: [:button, :tiny, :secondary]
                                = link_to 'delete card', "/admin/nfcs/#{card.id.to_s}", method: :delete, class: [:button, :alert, :tiny]

      %br/
      .ethereum
        %strong= t(:extra_documentation_slots) + ":"
        = @user.userphotoslots.size
        - unless @user.userphotoslots.empty.empty?
          = t(:x_unused, count: @user.userphotoslots.empty.size)

      - if user_signed_in?
        - if current_user.has_role? :admin
          %br/
          .ethereum
            %strong= t :email
            = @user.email
            %br/
            %br/
            %strong= t :authentications
            - @user.authentications.each do |auth|
              %p= "provider: #{auth.provider}, username: #{auth.username}, uid: #{auth.uid}"
  .row.expanded
    .small-10.medium-8.large-4.columns
      - unless Event.where(primary_sponsor: @user).empty?
        .title
          = t :experiments_instigated
          = "(#{Event.where(primary_sponsor: @user).size.to_s})"
        %ul
          - Event.where(primary_sponsor: @user).order(:id).each do |exp|
            %li= link_to exp.name, exp

      - if @user.proposals.empty?
        %em= t :no_proposals_made
      - else
        .title
          = t :proposals
          = "(#{@user.proposals.size.to_s})"
        %ul
          - @user.proposals.order(created_at: :desc).each do |proposal|
            %li= link_to proposal.name, proposal

    .small-10.medium-8.large-4.columns
      - if @user.pledges.empty?
        %em= t :no_pledges_made
      - else
        .title
          = t :pledges
          = " (#{@user.pledges.size.to_s})"
        %ul.pledges
          - @user.pledges.group_by{|x| x.converted.to_i}.each do |group|
            %li.heading
              = group.first == 1 ? t(:spent) + ":" : t(:pending) + ":"
              %ul
                - group.last.group_by{|x| x.item}.each do |pledge|
                  %li
                    - if pledge.first.class == Idea
                      = link_to pledge.first.name, "https://kuusipalaa.fi/ideas/#{pledge.first.slug}", target: :_blank
                      = raw "(#{pledge.last.sum(&:pledge).to_s}áµ½)"
                      %small [Kuusi Palaa]
                    - else
                      = link_to pledge.first.name, "/proposals/#{pledge.first.id}"
                      = raw "(#{pledge.last.sum(&:pledge).to_s}#{tsign})"

    .small-10.medium-8.large-4.columns
      - if @user.comments.empty?
        %em= t :no_comments
      - else
        .title
          = t(:comments)
          = "(#{@user.comments.temporary.size.to_s})"
        %ul
          - @user.comments.temporary.order(created_at: :desc).each do |comment|
            %li
              = raw t(:commented_on_item, item: link_to(comment.item.name, comment.item, target: :_blank))
              = ": "
              .subtext
                ="'"
                = truncate_html sanitize(comment.content, tags: %w{strong b bold italic em u}), length: 80
                = "'"

  - unless @user.all_activities.empty?
    .row.expanded
      .small-12.columns
        .title= t :activity
    .row.expanded
      .small-12.columns
        %table#activities.activities
          %thead
            %tr
              %th= t :the_date
              %th= t :who
              %th= t :activity
              %th= t :subject
              %th
                = raw tsign
                %small= link_to '?', '#', onclick: "javascript:$('.occluded').slideToggle();return false"
                .occluded
                  = fa_icon('plus') + ": " + t(:created)
                  %br/
                  = fa_icon('minus') + ": " + t(:spent)
                  %br/
                  = fa_icon('smile-o') + "/" + fa_icon('frown-o') + ': ' + t(:pledged_or_withdrawn)
                  %br/
                  = fa_icon('arrows-h') + ": " + t(:transferred)
              %th Info
          %tfoot
            %tr
              %td{:colspan => "4"}
              %td= @user.all_activities.select{|x| x.addition == 1}.sum{|x| x.value.to_i}  - @user.all_activities.select{|x| x.addition == -1}.sum{|x| x.value.to_i} + @user.all_activities.select{|x| x.description =~ /received/ && x.user == @user }.sum{|x| x.value.to_i}  - @user.all_activities.select{|x| x.description =~ /received/ && x.item == @user }.sum{|x| x.value.to_i}
              %td
          %tbody.page
            = render @user.all_activities.sort_by(&:created_at).reverse


    .row.expanded
      .small-5.columns.right.end
        - total = 0
        = fa_icon 'plus'
        - plus = @user.all_activities.select{|x| x.addition == 1}.sum{|x| x.value.to_i}
        - total += plus
        = t(:number_earned, number: plus)

        %br/
        = fa_icon 'minus'
        - minus =  @user.all_activities.select{|x| x.addition == -1}.sum{|x| x.value.to_i}
        = t(:number_spent, number: minus)
        - total -= minus

        %br/
        = fa_icon 'plus'
        - plus2 = @user.all_activities.select{|x| x.description =~ /received/ && x.user == @user }.sum{|x| x.value.to_i}
        - total += plus2
        = t(:number_transferred_from, number: plus2)
        %br/
        = fa_icon 'minus'
        - minus2 = @user.all_activities.select{|x| x.description =~ /received/ && x.item == @user }.sum{|x| x.value.to_i}

        - total -= minus2
        = t(:number_transferred_to, number: minus2)

        %hr/

        = fa_icon 'smile-o'
        - pending =  @user.pending_pledges.sum(&:pledge)
        = t(:number_pledged, number: pending)


        %hr
        %strong= t :totals
        %br/
        = raw(t(:number_in_total, number: total))

        %br/
        = raw(t(:number_held_in_pledges, number: pending))

        %br/
        %strong
          %u= raw(t(:number_available, number: total - pending))


= content_for :jquery do
  :plain
    $('table.activities').stacktable()
