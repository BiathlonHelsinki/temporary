- unless @instance.errors.empty?
  .row
    .small-10.medium-4.columns.errors
      = @instance.errors.full_messages.join('! ')
= semantic_form_for [:admin, @experiment, @instance], html: {:"data-abide" => true, multipart: true} do |f|
  = f.input :event_id, as: :hidden
  
  .row
    .small-10.medium-6.columns= f.input :start_at, :as => :string,  :input_html => {required: '', class: 'datetimepicker', value: f.object.new_record? ? '' : (f.object.start_at.nil? ? '' : f.object.start_at.strftime('%Y-%m-%d %H:%M'))}, label: 'Starting date and time '
    .small-10.medium-6.columns= f.input :end_at, :as => :string, :input_html => {:class => 'datetimepicker', value: f.object.new_record? ? '' : (f.object.end_at.nil? ? '' : f.object.end_at.strftime('%Y-%m-%d %H:%M'))}, :label => "Ending date and time of last event, if known. You will add individual intances later, if necessary.", :hint => 'if events run past midnight, put them as 23:59 '
  .row
    .small-10.medium-6.columns= f.input :place, as: :select
  .row
    .small-10.medium-6.columns= f.input :proposal, as: :select, collection: f.object.new_record? ? Proposal.schedulable.map{|b| [raw(b.name + " (" + b.remaining_pledges.to_s + tsign + " available)"), b.id]} : Proposal.all.map{|b| [raw(b.name + " (" + b.remaining_pledges.to_s + tsign + " available)"), b.id]},  include_blank: false, hint: 'You need ' + f.object.cost_in_temps.to_s + ' for this', label: 'Proposal to spend from:'
  .row
    .small-10.medium-4.columns= f.input :custom_bb_fee, label: 'Override expected Temps cost with:'    
  .row
    .small-10.medium-4.columns= f.input :cost_euros
  .row
    .small-10.medium-4.columns= f.input :cost_bb, label: "Number of " + ENV['currency_symbol'] + " received for attending", input_html: {required: ''}

  .row
    .small-10.medium-4.columns= f.input :sequence, label: 'Temporary experiment #' 
  .row
    .small-10.medium-8.columns
      %dl.tabs{"data-tab" => ""}
        - I18n.available_locales.each_with_index do |locale, i|
          %dd{:class => (i == 0 ? :active : false)}
            = link_to t(:locale_name, :locale => locale), "##{locale}"
      .tabs-content
        - I18n.available_locales.each_with_index do |locale, i|
          .content{:class => (i == 0 ? :active : false), :id => "#{locale}"}
            = f.globalize_fields_for locale do |en|
              .row
                .small-12.columns
                  %b= "Name of experiment in #{t :locale_name, :locale => locale}"
                  = en.text_field :name, :required => (locale == :en ? '' : false), value: @instance.name(:en)
                  - if locale == :en
                    %small.error You must enter an English name for the experiment.
              .row
                .small-12.columns
                  %b= "Description of event in #{t :locale_name, :locale => locale}"
                  = en.cktext_area :description, value: @instance.description(:en)

  .row
    .small-10.medium-4.columns
      - if f.object.image?
        = image_tag f.object.image.url(:box)
      = f.input :image, label: (f.object.image? ? 'Change image' : 'Image')
  .row  
    .small-10.medium-4.columns= f.input :allow_multiple_entry, label: 'Allow multiple entry?', hint: 'For multi-day events. If ticked, users will receive Temps for each day they attend.'
  .row
    .small-10.medium-4.columns= f.input :is_meeting, label: 'Is a Temporary meeting?', hint: 'Tick this if this will also be a weekly-ish meeting for scheduling and other business.'
  .row
    .small-10.medium-4.columns= f.input :request_rsvp, label: 'Ask people to RSVP', as: :boolean
  .row
    .small-10.medium-4.columns= f.input :request_registration, label: 'Require people to register', hint: 'Not yet functional', as: :boolean
  .row
    .small-10.medium-10.columns
      %fieldset
        %legend Registration stuff
        .row
          .small-10.medium-9.columns= f.input :max_attendees
        .row
          .small-10.medium-9.columns= f.input :require_approval, label: 'Registrations must be approved by experiment instigator', as: :boolean
        .row
          .small-10.medium-9.columns= f.input :email_registrations_to, label: 'Email registrations to:', hint: 'Default is experiment instigator\'s email'
        .row
          .small-10.medium-9.columns= f.input :question1_text, label: 'Optional question 1'
        .row
          .small-10.medium-9.columns= f.input :question2_text, label: 'Optional question 2'
        .row
          .small-10.medium-9.columns= f.input :question3_text, label: 'Optional question 3'
        .row
          .small-10.medium-9.columns= f.input :question4_text, label: 'Optional question 4'                    
        .row
          .small-10.medium-9.columns= f.input :boolean1_text, label: 'Optional yes/no question 1'
        .row
          .small-10.medium-9.columns= f.input :boolean2_text, label: 'Optional yes/no question 2'
        .row
          .small-10.medium-9.columns= f.input :registration_open, label: 'Registration is open?', as: :boolean
                             
  .row
    .small-10.medium-8.columns= f.input :send_to_pledgers, label: 'Send notification email to all of those who pledged to this particular instance', as: :boolean
  .row
    .small-10.medium-4.columns= f.input :published
  .row
    .small-10.medium-4.columns= f.submit 'Save', class: [:button]
    
  

= content_for :jquery do
  :plain
    
    $('.datetimepicker').fdatetimepicker({ weekStart: 1 });
