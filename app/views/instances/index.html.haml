.experiments_index
  .row.expanded
    .small-12.medium-9.columns
      %h1
        .sequence
          = t :experiment, count: 1
          = "##{@experiment.sequence}:"
        = @experiment.name
        -# = link_to fa_icon('calendar'), calendar_experiments_path
      - if @experiment.image?
        .image= image_tag @experiment.image.url(:medium)
      %p= raw @experiment.description
      
  - unless @experiment.instances.empty?
    .row.expanded
      .small-12.columns
        
        %p
          = pluralize(@experiment.instances.size, 'meeting') + ' scheduled.'
          = pluralize(@experiment.instances.map(&:users).flatten.size, 'person') + ' have checked in '
          = "(" + pluralize(@experiment.instances.map(&:users).flatten.uniq.size, 'distinct person') + "), and "
          = pluralize(@experiment.instances.map{|x| x.onetimers.unclaimed}.flatten.size, 'anonymous guest ticket') + '.'
          
        %p
          Original proposal:
          = link_to @experiment.instances.first.proposal.name, @experiment.instances.first.proposal
          by 
          = link_to @experiment.instances.first.proposal.user.display_name,  @experiment.instances.first.proposal.user
  - unless @future.empty?
    .row.expanded
      .small-12.columns
        %h1= t :coming_up
  .row.expanded#expandme.small-up-1.medium-up-2.large-up-4.xxlarge-up-5{:"data-equalizer" => '', :"data-equalize-by-row" => "true"}
    - @future.each do |exp|
      = render partial: 'experiment_instance_column', locals: {exp: exp, experiment: @experiment}

  - unless @experiment.instances.past.empty?
    .row.expanded
      .small-12.columns
        %h1
          Past occurrences:
    .row.expanded#expandme.small-up-1.medium-up-2.large-up-4.xlarge-up-5{:"data-equalizer" => '', :"data-equalize-by-row" => "true"}
      - @past.each do |exp|
        = render partial: 'experiment_instance_column', locals: {exp: exp, experiment: @experiment}
      


  = render partial: 'experiments/comments_and_form'