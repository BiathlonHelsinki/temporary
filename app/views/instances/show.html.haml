%article.instance_single
  .row.expanded
    .small-10.medium-10.large-7.columns
      .post
        .meta
          %span.date= date_range(@instance.start_at, @instance.end_at)
          = " // "
          %span.category 
            - if @experiment.instances.size > 1
              = link_to @experiment.name, @experiment
            - else
              = link_to "Experiment ", @experiment
          = " // "
          - if @instance.cancelled == true
            %span.cancelled= t :cancelled
        .title
          = "Experiment ##{@instance.sequence}:"
          = @instance.name
          - if @instance.name =~ /open\stime/
            %br/
            = link_to fa_icon('area-chart'), stats_experiment_instance_path(@instance.experiment, @instance)
        .temps
          - if @instance.cancelled
            .cancelled
              %h3= t :experiment_has_been_cancelled
              %br/
              %h4= t :reschedule_info
          - else
            - if @instance.in_future?
              = raw "You will earn #{@instance.cost_bb}#{tsign} for participating!"
              - if @instance.request_registration?
                %p
                  You must register for this experiment.
                  - unless @instance.max_attendees.blank?
                    There 
                    = @instance.max_attendees - @instance.registrations.not_waiting.to_a.delete_if{|x| x.new_record? }.size == 1 ? 'is' : 'are' 
                    = pluralize(@instance.max_attendees - @instance.registrations.not_waiting.size, 'place')
                    left.
                  %br/
                  - if user_signed_in?
                    - if current_user.registered?(@instance)
                      = link_to "Cancel registration!", '#', onclick:"javascript:$(document).scrollTo('#cancel_link', 800);return false;", class: [:button, :alert]
                    - elsif !@instance.max_attendees.blank?
                      = link_to "Register#{(@instance.max_attendees - @instance.registrations.not_waiting.to_a.delete_if{|x| x.new_record? }.size < 1 ? ' for the waiting list' : '')}!", '#', onclick:"javascript:$('.registration_form').slideToggle();$(document).scrollTo('.registration_form', 800);return false;", class: [:button]
                    - else
                      = link_to "Register!", '#', onclick:"javascript:$('.registration_form').slideToggle();$(document).scrollTo('.registration_form', 800);return false;", class: [:button]
                  - else
                    - if !@instance.max_attendees.blank?
                      = link_to "Register#{(@instance.max_attendees - @instance.registrations.not_waiting.to_a.delete_if{|x| x.new_record? }.size) < 1 ? ' for the waiting list' : ''}!", '#', onclick:"javascript:$('.registration_form').slideToggle();$(document).scrollTo('#sign_in_to_register', 800);return false;", class: [:button]
                    - else
                      = link_to "Register!", '/users/sign_in', class: [:button]
              - else
                - if user_signed_in?

                  - if current_user.rsvpd?(@instance)
              
                    %strong  You have RSVPd to this event.
                  - else
                    %br/
                    = link_to 'I plan to attend!', rsvp_experiment_instance_path(@instance.experiment, @instance), method: :post, class: [:button]
            - else
              = link_to raw(pluralize((@instance.users.uniq + @instance.onetimers.unclaimed).size, 'person')), '#', onClick: "javascript:$(window).scrollTo('#participants', {duration: 1000});return false;"
              participated, earning
              = raw "#{@instance.users.uniq.size * @instance.cost_bb}#{tsign}." 
        - if @instance.proposal
          .proposal_info
            Scheduled from proposal:
            = link_to @instance.proposal.name, @instance.proposal, target: :_blank
            with
            = raw (@instance.cost_in_temps.to_s + tsign)
            - unless @instance.pledges.empty?
              .pledge_info
              
                Supported by:
                = raw @instance.pledges.order(:created_at).group_by(&:user).map{|user| "#{link_to user.first.display_name, user.first} (#{user.last.sum(&:pledge).to_s})" }.join(', ')
              
        .temps= link_to fa_icon('download') + " Calendar", experiment_instance_path(@instance.experiment, @instance, format: 'ics'), class: [:button, :small]
        - if @instance.image?
          = image_tag @instance.image.url.gsub(/development/, 'production')
        - elsif @experiment.image?
          = image_tag @experiment.image.url.gsub(/development/, 'production')

        .body= raw @instance.description
  
  .rsvp_container      
    - if @instance.request_registration == true
      - if user_signed_in?
        - if current_user.has_role?(:admin) || current_user == @instance.experiment.primary_sponsor
          .row.expanded
            .small-10.medium-8.columns
              %h3 Registrations:
          .row.expanded
            .small-10.medium-8.columns              
              %ol
                - @instance.registrations.each do |user|
                  %li
                    = link_to user.user.display_name, user.user, target: :_blank
                    - if user.waiting_list == true
                      %em waiting list
                    %br/
                    = [user.user.email, user.phone].compact.join(' / ')
                    %br/
                    = [user.question1, user.question2].compact.join(', ')
                    %br/
                    %br/
              
      - if @instance.in_future? # && @instance.registration_open == true
        .row.expanded
          .small-10.medium-8.columns
            - if user_signed_in?
              - if current_user.registered?(@instance)
                #cancel_link
                  %h5 You have registered for this event. Thank you, and we will see you there!
                  %h5 If you think you will not be able to attend, please cancel your registration, as a courtesy to others.
                
                  = link_to 'Cancel registration', cancel_registration_experiment_instance_path(@instance.experiment, @instance), method: :post, class: [:button, :alert], data: {confirm: 'Are you sure you want to cancel your registration?'}
              - else
                %h4
                  %strong You must register for this experiment.
                  - unless @instance.max_attendees.blank?
                    There
                    = @instance.max_attendees - @instance.registrations.not_waiting.size == 1 ? 'is' : 'are'
                    = pluralize(@instance.max_attendees - @instance.registrations.not_waiting.size, 'place')
                    left.
                    
            - else
              #sign_in_to_register
                %h4
                  = t(:if_you_want_to_register, sign_in: link_to(t(:sign_in).downcase, '/users/sign_in'))

                  %br/
                  = link_to 'Sign in (or join)', '/users/sign_in', class: [:button]
                  %br/
                  
        .row.expanded
          .small-10.medium-8.columns
            - if user_signed_in?
              -  unless current_user.registered?(@instance)
                = link_to 'Register me', '#', onclick: 'javascript:$(".registration_form").slideToggle();return false;', class: [:button]
                .registration_form
                  .row.expanded
                    .small-10.medium-8.columns
                      %h4 Registration form
                      - unless @instance.max_attendees.blank?
                        - if @instance.max_attendees.to_i - @instance.registrations.not_waiting.to_a.delete_if{|x| x.new_record? }.size < 1
                          %h5 Registration is currently full. However, you may register for the waiting list and you will be notified if a space becomes available.
                  = semantic_form_for  [ @instance.experiment, @instance,  @registration = @instance.registrations.build(user: current_user)], html: {:"data-abide" => '' } do |f|
                    = f.input :user_id, as: :hidden, data: {value: current_user.id}

               
                    - unless @instance.question1_text.blank?
                      .row.expanded
                        .small-10.medium-8.columns= f.input :question1, label: @instance.question1_text, input_html: {required: ''}
                    - unless @instance.question2_text.blank?
                      .row.expanded
                        .small-10.medium-8.columns= f.input :question2, label: @instance.question2_text, input_html: {required: ''}
                    - unless @instance.question3_text.blank?
                      .row.expanded
                        .small-10.medium-8.columns= f.input :question3, label: @instance.question3_text, input_html: {required: ''}
                    - unless @instance.question4_text.blank?
                      .row.expanded
                        .small-10.medium-8.columns= f.input :question4, label: @instance.question4_text , input_html: {required: ''}   
                    - unless @instance.boolean1_text.blank?
                      .row.expanded
                        .small-10.medium-8.columns= f.input :boolean1, as: :boolean, label: @instance.boolean1_text 
                    - unless @instance.boolean2_text.blank?
                      .row.expanded
                        .small-10.medium-8.columns= f.input :boolean2, as: :boolean, label: @instance.boolean2_text                            
                    .row.expanded
                      .small-10.medium-8.columns= f.input :phone, label: 'Please enter your phone number so the experiment organiser can contact you if there are any issues or problems or last-minute changes', hint: 'This is optional, though.'
                    .row.expanded
                      .small-10.medium-8.columns= f.submit t(:register), :class => [:button, :round]                                                                                             
                        
      - elsif @instance.in_future?
        .row.expanded
          .small-10.medium-8.columns
            %h5 Sorry, registration is currently closed.
      - else
        .row.expanded
          .small-10.medium-8.columns
            %h5 This experiment already took place.
    - else
      - if @instance.request_rsvp? && @instance.in_future?
        .row.expanded
          .small-10.medium-8.columns
            - if user_signed_in?
              - if current_user.rsvpd?(@instance)
              
                %h5 You have RSVPd to this event. Thank you, and we will see you there!
                = link_to 'Cancel RSVP', cancel_rsvp_experiment_instance_path(@instance.experiment, @instance), method: :post, class: [:button, :alert], data: {confirm: 'Are you sure you want to cancel your RSVP?'}
              - else
                %h4 The organiser of this experiment has requested that you RSVP if you are attending.
            - else
              %h4
                The organiser of this experiment has requested that you RSVP if you are attending.
                = link_to 'RSVP!', '/users/sign_in', class: [:button]
        .row.expanded
          .small-10.medium-8.columns
      
            - if user_signed_in?
              -  unless current_user.rsvpd?(@instance)
                = link_to 'Yes, I plan to attend!', rsvp_experiment_instance_path(@instance.experiment, @instance), method: :post, class: [:button]
  
  
  - if @instance.users.empty? && @instance.onetimers.empty?
    - unless @instance.rsvps.empty? && @instance.responsible_people.empty?
      %section#participants
        - if @instance.request_registration == true
          - unless @instance.registrations.to_a.delete_if{|x| x.new_record? }.empty?
            .row.expanded
              .small-10.medium-6.columns
                .participant_header Registered participants (you must register to participate):
            .row.expanded.small-up-4.medium-up-6.large-up-8.xlarge-up-9  
              - @instance.registrations.to_a.delete_if{|x| x.new_record? }.each do |attended|
                .column.participant_grid
                  .image
                    - if attended.user.avatar?
                      = image_tag attended.user.avatar.url(:box)
                    - else
                      = image_tag image_path('user_missing_large.png')
                  .participant_overlay

                    = link_to attended.user.display_name, attended.user
                    - if @instance.experiment.primary_sponsor == attended.user
                      %br/
                      = link_to "(experiment instigator)", @instance.proposal
                    - if attended.waiting_list == true
                      %br/
                      Waiting list
                    - if user_signed_in?
                      - if current_user == attended.user
                        = link_to 'Cancel registration', cancel_registration_experiment_instance_path(@instance.experiment, @instance), method: :post, class: [:button, :alert], data: {confirm: 'Are you sure you want to cancel your registration?'}
                    - if @instance.allow_multiple_entry == true
                      = " (#{pluralize(@instance.users.select{|x| x == attended.user}.count, 'time')})"
                    
        - else
          .row.expanded
            .small-10.medium-6.columns
              .participant_header= t(:rsvp_explanation)
          .row.expanded.small-up-4.medium-up-6.large-up-8.xlarge-up-9  
            - [@instance.rsvps.map(&:user), @instance.responsible_people].flatten.compact.uniq.each do |attended|
              .column.participant_grid
                .image
                  - if attended.avatar?
                    = image_tag attended.avatar.url(:box)
                  - else
                    = image_tag image_path('user_missing_large.png')
                .participant_overlay

                  = link_to attended.display_name, attended 
                  - if @instance.responsible_people.include?(attended)
                    %br/
                    = t(:organiser)
                    - if @instance.experiment.primary_sponsor == attended || @instance.experiment.secondary_sponsor == attended
                      %br/
                      = link_to t(:experiment_instigator_brackets), @instance.proposal

                  - if user_signed_in?
                    - if current_user == attended
                      = link_to t(:cancel_rsvp), cancel_rsvp_experiment_instance_path(@instance.experiment, @instance), method: :post, class: [:button, :alert], data: {confirm: t(:confirm_cancel_rsvp) }
                  - if @instance.allow_multiple_entry == true
                    = " (#{pluralize(@instance.users.select{|x| x == attended}.count, 'time')})"
        
  - else
    %section#participants
      .row.expanded
        .small-10.medium-6.columns
          .participant_header 
            Participants
            = "(#{(@instance.users.uniq + @instance.onetimers.unclaimed).size.to_s}):"
      .row.expanded{class: (@instance.users.uniq.size > 12) ? 'small-up-6 medium-up-8 large-up-11 xlarge-up-13' : 'small-up-3 medium-up-4 large-up-6 xlarge-up-7' }
        - @instance.users.uniq.each do |attended|
          .column.participant_grid
            .image
              - if attended.avatar?
                = image_tag attended.avatar.url(:box)
              - else
                = image_tag image_path('user_missing_large.png')
            .participant_overlay

              = link_to attended.display_name, attended 
              - if @instance.experiment.primary_sponsor == attended
                %br/
                = link_to "(experiment instigator)", @instance.proposal

              - if @instance.allow_multiple_entry == true
                = " (#{pluralize(@instance.users.select{|x| x == attended}.count, 'time')})"
        - @instance.onetimers.unclaimed.each do |onetimer|
          .column.participant_grid
            .image= image_tag image_path('user_missing_large.png')
            .participant_overlay
              = raw "Anonymous person who arrived at #{onetimer.created_at.strftime('%H:%M')}"
              - if @instance.allow_multiple_entry == true
                = " on #{l onetimer.created_at.to_date, format: :short}"

  - unless @instance.experiment.instances.select{|x| x != @instance}.empty?
    - unless @instance.experiment.instances.current.or(@instance.experiment.instances.future).select{|x| x != @instance}.empty?
      .row.expanded
        .small-10.medium-10.large-7.columns
          %h3 Related experiments: future
      .row.expanded#expandme.small-up-1.medium-up-2.large-up-4.xxlarge-up-5{:"data-equalizer" => '', :"data-equalize-by-row" => "true"}
        - @instance.experiment.instances.current.or(@instance.experiment.instances.future).select{|x| x != @instance}.sort_by(&:start_at).each do |exp|
          = render partial: 'instances/experiment_instance_column', locals: {exp: exp, :"@experiment" =>  exp.experiment}
    - unless @instance.experiment.instances.past.select{|x| x != @instance}.empty?
      .row.expanded
        .small-10.medium-10.large-7.columns
          %h3 Related experiments: past
      .row.expanded#expandme.small-up-1.medium-up-2.large-up-4.xxlarge-up-5{:"data-equalizer" => '', :"data-equalize-by-row" => "true"}
        - @instance.experiment.instances.past.select{|x| x != @instance}.sort_by(&:start_at).each do |exp|
          = render partial: 'instances/experiment_instance_column', locals: {exp: exp, :"@experiment" =>  exp.experiment}
          

 
  = render partial: 'experiments/comments_and_form'