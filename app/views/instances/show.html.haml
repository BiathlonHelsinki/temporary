%article.instance_single
  .row.expanded
    .small-10.medium-10.large-7.columns
      .post
        .meta
          %span.date= date_range(@instance.start_at, @instance.end_at)
          = " // "
          %span.category 
            - if @experiment.instances.size > 1
              = link_to @experiment.name, @experiment
            - else
              = link_to "Experiment ", @experiment
          = " // "
        .title
          = "Experiment ##{@instance.sequence}:"
          = @instance.name
        .temps
          - if @instance.in_future?
            = raw "You will earn #{@instance.cost_bb}#{tsign} for participating!"
            
            - if user_signed_in?
              - if current_user.rsvpd?(@instance)
              
                %strong  You have RSVPd to this event.
              - else
                %br/
                = link_to 'I plan to attend!', rsvp_experiment_instance_path(@instance.experiment, @instance), method: :post, class: [:button]
          - else
            = link_to raw(pluralize((@instance.users.uniq + @instance.onetimers.unclaimed).size, 'person')), '#', onClick: "javascript:$(window).scrollTo('#participants', {duration: 1000});return false;"
            participated, earning
            = raw "#{@instance.users.uniq.size * @instance.cost_bb}#{tsign}." 
        - if @instance.proposal
          .proposal_info
            Scheduled from proposal:
            = link_to @instance.proposal.name, @instance.proposal, target: :_blank
            with
            = raw (@instance.cost_in_temps.to_s + tsign)
            - unless @instance.pledges.empty?
              .pledge_info
              
                Supported by:
                = raw @instance.pledges.order(:created_at).map{|pledge|   "#{link_to pledge.user.display_name, pledge.user} (#{pledge.pledge.to_s})" }.join(', ') 
              
        .temps= link_to fa_icon('download') + " Calendar", experiment_instance_path(@instance.experiment, @instance, format: 'ics'), class: [:button, :small]
        - if @instance.image?
          = image_tag @instance.image.url.gsub(/development/, 'production')
        - elsif @experiment.image?
          = image_tag @experiment.image.url.gsub(/development/, 'production')

        .body= raw @instance.description
  
  .rsvp_container      
    - if @instance.request_rsvp? && @instance.in_future?
      .row.expanded
        .small-10.medium-8.columns
          - if user_signed_in?
            - if current_user.rsvpd?(@instance)
              
              %h5 You have RSVPd to this event. Thank you, and we will see you there!
              = link_to 'Cancel RSVP', cancel_rsvp_experiment_instance_path(@instance.experiment, @instance), method: :post, class: [:button, :alert], data: {confirm: 'Are you sure you want to cancel your RSVP?'}
            - else
              %h4 The organiser of this experiment has requested that you RSVP if you are attending.
          - else
            %h4
              The organiser of this experiment has requested that you RSVP if you are attending.
              = link_to 'RSVP!', '/users/sign_in', class: [:button]
      .row.expanded
        .small-10.medium-8.columns
      
          - if user_signed_in?
            -  unless current_user.rsvpd?(@instance)
              = link_to 'Yes, I plan to attend!', rsvp_experiment_instance_path(@instance.experiment, @instance), method: :post, class: [:button]

  - if @instance.users.empty? && @instance.onetimers.empty?
    - unless @instance.rsvps.empty?
      %section#participants
        .row.expanded
          .small-10.medium-6.columns
            .participant_header RSVPd (planning to attend):
        .row.expanded.small-up-4.medium-up-6.large-up-8.xlarge-up-9  
          - @instance.rsvps.map(&:user).each do |attended|
            .column.participant_grid
              .image
                - if attended.avatar?
                  = image_tag attended.avatar.url(:box)
                - else
                  = image_tag image_path('user_missing_large.png')
              .participant_overlay

                = link_to attended.display_name, attended 
                - if @instance.experiment.primary_sponsor == attended
                  %br/
                  = link_to "(experiment instigator)", @instance.proposal
                - if user_signed_in?
                  - if current_user == attended
                    = link_to 'Cancel RSVP', cancel_rsvp_experiment_instance_path(@instance.experiment, @instance), method: :post, class: [:button, :alert], data: {confirm: 'Are you sure you want to cancel your RSVP?'}
                - if @instance.allow_multiple_entry == true
                  = " (#{pluralize(@instance.users.select{|x| x == attended}.count, 'time')})"
        
  - else
    %section#participants
      .row.expanded
        .small-10.medium-6.columns
          .participant_header 
            Participants
            = "(#{(@instance.users.uniq + @instance.onetimers.unclaimed).size.to_s}):"
      .row.expanded.small-up-3.medium-up-4.large-up-6.xlarge-up-7
        - @instance.users.uniq.each do |attended|
          .column.participant_grid
            .image
              - if attended.avatar?
                = image_tag attended.avatar.url(:box)
              - else
                = image_tag image_path('user_missing_large.png')
            .participant_overlay

              = link_to attended.display_name, attended 
              - if @instance.experiment.primary_sponsor == attended
                %br/
                = link_to "(experiment instigator)", @instance.proposal

              - if @instance.allow_multiple_entry == true
                = " (#{pluralize(@instance.users.select{|x| x == attended}.count, 'time')})"
        - @instance.onetimers.unclaimed.each do |onetimer|
          .column.participant_grid
            .image= image_tag image_path('user_missing_large.png')
            .participant_overlay
              = raw "Anonymous person who arrived at #{onetimer.created_at.strftime('%H:%M')}"
              - if @instance.allow_multiple_entry == true
                = " on #{l onetimer.created_at.to_date, format: :short}"

  - unless @instance.experiment.instances.select{|x| x != @instance}.empty?
    - unless @instance.experiment.instances.current.or(@instance.experiment.instances.future).select{|x| x != @instance}.empty?
      .row.expanded
        .small-10.medium-10.large-7.columns
          %h3 Related experiments: future
      .row.expanded#expandme.small-up-1.medium-up-2.large-up-4.xxlarge-up-5{:"data-equalizer" => '', :"data-equalize-by-row" => "true"}
        - @instance.experiment.instances.current.or(@instance.experiment.instances.future).select{|x| x != @instance}.sort_by(&:start_at).each do |exp|
          = render partial: 'instances/experiment_instance_column', locals: {exp: exp, :"@experiment" =>  exp.experiment}
    - unless @instance.experiment.instances.past.select{|x| x != @instance}.empty?
      .row.expanded
        .small-10.medium-10.large-7.columns
          %h3 Related experiments: past
      .row.expanded#expandme.small-up-1.medium-up-2.large-up-4.xxlarge-up-5{:"data-equalizer" => '', :"data-equalize-by-row" => "true"}
        - @instance.experiment.instances.past.select{|x| x != @instance}.sort_by(&:start_at).each do |exp|
          = render partial: 'instances/experiment_instance_column', locals: {exp: exp, :"@experiment" =>  exp.experiment}
          

 
  = render partial: 'experiments/comments_and_form'